import telebot, sqlite3,ast,re,math,json,random,string
from telebot import types
from config import *
from db import *

artistr=0
TK=0
room=[]
roominfo=[]

bot= telebot.TeleBot(token=TOKEN)


connect=sqlite3.connect('db.db')
cursor=connect.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS users(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    tg_id INTEGER,
    username TEXT,
    status INTEGER,
    deal TEXT
)""")
cursor.execute("""CREATE TABLE IF NOT EXISTS orders(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT,
    code TEXT,
    customer TEXT,
    atistr TEXT,
    status TEXT,
    TK TEXT
)""")
connect.commit()


@bot.message_handler()
def ms(message):
    data=(select_db('name', 'users', 'tg_id', message.chat.id))
    if data==False:
        insert_db('name, tg_id, username, status, deal','users',(message.from_user.first_name, message.chat.id, message.from_user.username,0,0), '?,?,?,?,?')
        bot.send_message(logs,f'–ù–æ–≤—ã–π —é–∑–µ—Ä - {message.from_user.first_name} ({message.chat.id}), @{message.from_user.username}')
        user_menu(message)
    elif message.text=='‚ûï–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É' and admin_check(message):
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ id *–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è*:',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, artistr_id)
    elif message.text=='üìö–ö–æ–º–Ω–∞—Ç—ã' and admin_check(message):
        max=count_db('id','orders')
        text=''
        if max==0:
            bot.send_message(message.chat.id,'–í –±–æ—Ç–µ –µ—â–µ –Ω–µ—Ç –∫–æ–º–Ω–∞—Ç')
        for i in range(max):
            status=(select_db('status', 'orders', 'id', i+1))
            if status=='open':
                name=(select_db('name', 'orders', 'id', i+1))
                customer=(select_db('customer', 'orders', 'id', i+1))
                atistr=(select_db('atistr', 'orders', 'id', i+1))
                code=(select_db('code', 'orders', 'id', i+1))
                TK=(select_db('TK', 'orders', 'id', i+1))
                text=text+f'\n\n*–ö–æ–º–Ω–∞—Ç–∞*: `{name}`\n*–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã:* `{code}`\n*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å*: `{customer}`\n*–ó–∞–∫–∞–∑—á–∏–∫*: `{atistr}`\n*–¢–ó*: `{TK}`'
            if i+1==max:
                if text=='':
                    text='–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç'
                    bot.send_message(message.chat.id,text,parse_mode='Markdown')
                    user_menu(message)
                    break
                else:
                    text=f'–°–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç:{text}'
                    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥','üîí–ó–∞–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É')
                    ms=bot.send_message(message.chat.id,text,reply_markup=klava,parse_mode='Markdown')
                    bot.register_next_step_handler(ms, choose_room)
                    break
       
    elif message.text=='üßîüèø‚Äç‚ôÇÔ∏è–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏' and admin_check(message):
        artist_menu(message)
    elif message.text=='/id':
        bot.send_message(message.chat.id,f'`{message.chat.id}`',parse_mode='Markdown')
    else:
        status=(select_db('status', 'users', 'tg_id', message.chat.id))
        deal=(select_db('deal', 'users', 'tg_id', message.chat.id))
        name=(select_db('name', 'orders', 'code', deal))
        if status==1 and deal!= '0':
            atistr=(select_db('atistr', 'orders', 'code', deal))
            if atistr is None:
                bot.send_message(message.chat.id,'‚ö†Ô∏è–ó–∞–∫–∞–∑—á–∏–∫ –µ—â–µ –Ω–µ –∑–∞—à–µ–ª –≤ –∫–æ–º–Ω–∞—Ç—É!\n–ö–∞–∫ —ç—Ç–æ —Å–ª—É—á–∏—Ç—Å—è - –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!')
            else:
                big_ms(atistr,f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è:\n{message.text}')
                
                klava=types.InlineKeyboardMarkup()
                klava.add(types.InlineKeyboardButton(text='‚úâÔ∏è–ù–∞–ø–∏—Å–∞—Ç—å', url=f't.me/{message.from_user.username}'))
                bot.send_message(logs, f'*–ö–æ–º–Ω–∞—Ç–∞*: `{name} `\n*–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å*: `–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å`',parse_mode='Markdown',reply_markup=klava)
                bot.forward_message(logs, message.chat.id, message.message_id)
        elif status==1 and deal=='0':
            user_menu(message)
        else:
            user_menu(message)



#–ó–∞–∫—Ä—ã—Ç–∏–µ –∫–æ–º–Ω–∞—Ç—ã
def choose_room(message):
    if message.text is None:
        max=count_db('id','orders')
        text=''
        if max==0:
            bot.send_message(message.chat.id,'–í –±–æ—Ç–µ –µ—â–µ –Ω–µ—Ç –∫–æ–º–Ω–∞—Ç')
        for i in range(max):
            status=(select_db('status', 'orders', 'id', i+1))
            if status=='open':
                name=(select_db('name', 'orders', 'id', i+1))
                customer=(select_db('customer', 'orders', 'id', i+1))
                atistr=(select_db('atistr', 'orders', 'id', i+1))
                code=(select_db('code', 'orders', 'id', i+1))
                TK=(select_db('TK', 'orders', 'id', i+1))
                text=text+f'\n\n*–ö–æ–º–Ω–∞—Ç–∞*: `{name}`\n*–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã:* `{code}`\n*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å*: `{customer}`\n*–ó–∞–∫–∞–∑—á–∏–∫*: `{atistr}`\n*–¢–ó*: `{TK}`'
            if i+1==max:
                if text=='':
                    text='–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç'
                    bot.send_message(message.chat.id,text,reply_markup=klava,parse_mode='Markdown')
                    user_menu(message)
                    break
                else:
                    text=f'–°–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç:{text}'
                    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥','üîí–ó–∞–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É')
                    ms=bot.send_message(message.chat.id,text,reply_markup=klava,parse_mode='Markdown')
                    bot.register_next_step_handler(ms, choose_room)
                    break
    elif message.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        user_menu(message)
    elif message.text=='üîí–ó–∞–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É':
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏  –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å.\n–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç—ã –≤–≤–µ–¥–µ—à—å –∫–æ–¥ - –∫–æ–º–Ω–∞—Ç–∞ —Å—Ä–∞–∑—É –∂–µ –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç–∞',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, input_code_room)
    else:
        max=count_db('id','orders')
        text=''
        if max==0:
            bot.send_message(message.chat.id,'–í –±–æ—Ç–µ –µ—â–µ –Ω–µ—Ç –∫–æ–º–Ω–∞—Ç')
        for i in range(max):
            status=(select_db('status', 'orders', 'id', i+1))
            if status=='open':
                name=(select_db('name', 'orders', 'id', i+1))
                customer=(select_db('customer', 'orders', 'id', i+1))
                atistr=(select_db('atistr', 'orders', 'id', i+1))
                code=(select_db('code', 'orders', 'id', i+1))
                TK=(select_db('TK', 'orders', 'id', i+1))
                text=text+f'\n\n*–ö–æ–º–Ω–∞—Ç–∞*: `{name}`\n*–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã:* `{code}`\n*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å*: `{customer}`\n*–ó–∞–∫–∞–∑—á–∏–∫*: `{atistr}`\n*–¢–ó*: `{TK}`'
            if i+1==max:
                if text=='':
                    text='–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç'
                    bot.send_message(message.chat.id,text,reply_markup=klava,parse_mode='Markdown')
                    user_menu(message)
                    break
                else:
                    text=f'–°–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç:{text}'
                    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥','üîí–ó–∞–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É')
                    ms=bot.send_message(message.chat.id,text,reply_markup=klava,parse_mode='Markdown')
                    bot.register_next_step_handler(ms, choose_room)
                    break


#–í–≤–æ–¥ –∫–æ–¥–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –∫–æ–º–Ω–∞—Ç—ã
def input_code_room(message):
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏  –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å.\n–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç—ã –≤–≤–µ–¥–µ—à—å –∫–æ–¥ - –∫–æ–º–Ω–∞—Ç–∞ —Å—Ä–∞–∑—É –∂–µ –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç–∞',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, input_code_room)
    elif message.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        max=count_db('id','orders')
        text=''
        if max==0:
            bot.send_message(message.chat.id,'–í –±–æ—Ç–µ –µ—â–µ –Ω–µ—Ç –∫–æ–º–Ω–∞—Ç')
        for i in range(max):
            status=(select_db('status', 'orders', 'id', i+1))
            if status=='open':
                name=(select_db('name', 'orders', 'id', i+1))
                customer=(select_db('customer', 'orders', 'id', i+1))
                atistr=(select_db('atistr', 'orders', 'id', i+1))
                code=(select_db('code', 'orders', 'id', i+1))
                TK=(select_db('TK', 'orders', 'id', i+1))
                text=text+f'\n\n*–ö–æ–º–Ω–∞—Ç–∞*: `{name}`\n*–ö–æ–¥ –∫–æ–º–Ω–∞—Ç—ã:* `{code}`\n*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å*: `{customer}`\n*–ó–∞–∫–∞–∑—á–∏–∫*: `{atistr}`\n*–¢–ó*: `{TK}`'
            if i+1==max:
                if text=='':
                    text='–£ –≤–∞—Å –Ω–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç'
                    bot.send_message(message.chat.id,text,reply_markup=klava,parse_mode='Markdown')
                    user_menu(message)
                    break
                else:
                    text=f'–°–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–Ω–∞—Ç:{text}'
                    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥','üîí–ó–∞–∫—Ä—ã—Ç—å –∫–æ–º–Ω–∞—Ç—É')
                    ms=bot.send_message(message.chat.id,text,reply_markup=klava,parse_mode='Markdown')
                    bot.register_next_step_handler(ms, choose_room)
                    break
    else:
        name = select_db('name', 'orders', 'code', message.text)
        atistr = select_db('atistr', 'orders', 'code', message.text)
        customer = select_db('customer', 'orders', 'code', message.text)
        if name==False:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
            ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏  –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å.\n–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ —Ç—ã –≤–≤–µ–¥–µ—à—å –∫–æ–¥ - –∫–æ–º–Ω–∞—Ç–∞ —Å—Ä–∞–∑—É –∂–µ –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç–∞',reply_markup=klava,parse_mode='Markdown')
            bot.register_next_step_handler(ms, input_code_room)
        else:
            update_db('status', 'orders', 'code', message.text, 'close')
            update_db('deal', 'users', 'tg_id', atistr, '0')
            update_db('deal', 'users', 'tg_id', customer, '0')
            bot.send_message(message.chat.id,f'–ö–æ–º–Ω–∞—Ç–∞ *{name}* –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–∞!',parse_mode='Markdown')
            bot.send_message(atistr,f'–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω, –∞ –∫–æ–º–Ω–∞—Ç–∞ *{name}* –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞!')
            bot.send_message(customer,f'–í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –∑–∞–≤–µ—Ä—à–µ–Ω, –∞ –∫–æ–º–Ω–∞—Ç–∞ *{name}* –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞!',parse_mode='Markdown')
            bot.send_message(logs,f'–ö–æ–º–Ω–∞—Ç–∞ *{name}* –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞!',parse_mode='Markdown')
            user_menu(message)

            



#–†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
def artistr_list(message):
    if message.text is None:
        artist_menu(message)
    elif message.text=='‚ûï–î–æ–±–∞–≤–∏—Ç—å –º–æ—Å–∫–∞–ª—è':
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –∏ –º—ã –¥–∞–¥–∏–º –µ–º—É üçå*–±–∞–Ω–∞–Ω* –∏ üßä*—Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã*!',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms,add_artistr)
    elif message.text=='üî™–£–±—Ä–∞—Ç—å –º–æ—Å–∫–∞–ª—è':
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –º—ã –∑–∞–±–µ—Ä–µ–º —É –Ω–µ–≥–æ –≤—Å–µ –µ–≥–æ –≤–µ—â–∏!',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms,dell_artistr)
    elif message.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        user_menu(message)
    elif message.text=='üóí–ú–æ–∏ –º–æ—Å–∫–∞–ª–∏':
        text=''
        max=count_db('id','users')
        for i in range(max):
            status=select_db('status', 'users', 'id', i+1)
            if status==1:
                name=select_db('name', 'users', 'id', i+1)
                username=select_db('username', 'users', 'id', i+1)
                tg_id=select_db('tg_id', 'users', 'id', i+1)
                text=text+f'\n‚õè {name} (`{tg_id}`) - @{username}'
            if i+1==max:
                if text=='':
                    text='üò¢üò¢üò¢–í—Å–µ –≤–∞—à–∏ –º–æ—Å–∫–∞–ª–∏ –∫—É–¥–∞-—Ç–æ —É–±–µ–∂–∞–ª–∏(((9('
                else:
                    text=f'üëÆüèª‚Äç‚ôÄÔ∏è–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –º–æ—Å–∫–∞–ª—å–æ–≤:\n{text}'
                bot.send_message(message.chat.id,text,parse_mode='Markdown')
                artist_menu(message)
                break
    else:
        artist_menu(message)


#–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
def add_artistr(message):
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –∏ –º—ã –¥–∞–¥–∏–º –µ–º—É üçå*–±–∞–Ω–∞–Ω* –∏ üßä*—Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã*!',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms,add_artistr)
    elif message.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        artist_menu(message)
    else:
        if message.text.isnumeric():
            status=select_db('status', 'users', 'tg_id', int(message.text))
            name=select_db('name', 'users', 'tg_id', int(message.text))
            if str(status)=='1':
                bot.send_message(message.chat.id,'üëë–≠–æ—Ç –º–æ—Å–∫–∞–ª—å —É–∂–µ —Ç–≤–æ–π!\n–î–∞–≤–∞–π –Ω–∞–π–¥–µ–º –¥—Ä—É–≥–æ–≥–æ')
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –∏ –º—ã –¥–∞–¥–∏–º –µ–º—É üçå*–±–∞–Ω–∞–Ω* –∏ üßä*—Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã*!',reply_markup=klava,parse_mode='Markdown')
                bot.register_next_step_handler(ms,add_artistr)
            elif str(status)=='0':
                bot.send_message(message.chat.id,f'‚õì–º–æ—Å–∫–∞–ª—å *{name}* –ø–æ–≤–µ–ª—Å—è –Ω–∞ *–±–∞–Ω–∞–Ω* –∏ *–≤–æ–¥—É*. –ú—ã –∑–∞–∫–æ–≤–∞–ª–∏ –µ–≥–æ –≤ —Ü–µ–ø–∏ –∏ –¥–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–∞ –ø–ª–∞–Ω—Ç–∞—Ü–∏—é. –¢–µ–ø–µ—Ä—å –æ–Ω —Ç–≤–æ–π!',parse_mode='Markdown')
                update_db('status', 'users', 'tg_id', int(message.text), 1)
                artist_menu(message)
                
            else:
                bot.send_message(message.chat.id,'ü§¨–≠—Ç–æ—Ç –º–æ—Å–∫–∞–ª—å –Ω–µ —Å –Ω–∞—à–µ–π –ø–ª–∞–Ω—Ç–∞—Ü–∏–∏!\n–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–π–¥–∏')
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –∏ –º—ã –¥–∞–¥–∏–º –µ–º—É üçå*–±–∞–Ω–∞–Ω* –∏ üßä*—Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã*!',reply_markup=klava,parse_mode='Markdown')
                bot.register_next_step_handler(ms,add_artistr)
        else:
            bot.send_message(message.chat.id,'üôÖ‚Äç‚ôÇÔ∏è–ú–Ω–µ –Ω—É–∂–µ–Ω –∞–π–¥–∏ –º–æ—Å–∫–∞–ª—è. (–ê–π–¥–∏ - —ç—Ç–æ —á–∏—Å–ª–æ, –µ—Å–ª–∏ —á—Ç–æ..)\n–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–π–¥–∏')
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
            ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –∏ –º—ã –¥–∞–¥–∏–º –µ–º—É üçå*–±–∞–Ω–∞–Ω* –∏ üßä*—Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã*!',reply_markup=klava,parse_mode='Markdown')
            bot.register_next_step_handler(ms,add_artistr)


#—É–¥–∞–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
def dell_artistr(message):
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –º—ã –∑–∞–±–µ—Ä–µ–º —É –Ω–µ–≥–æ –≤—Å–µ –µ–≥–æ –≤–µ—â–∏!',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms,dell_artistr)
    elif message.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        artist_menu(message)
    else:
        if message.text.isnumeric():
            status=select_db('status', 'users', 'tg_id', int(message.text))
            name=select_db('name', 'users', 'tg_id', int(message.text))
            if str(status)=='0':
                bot.send_message(message.chat.id,'üßîüèø‚Äç‚ôÇÔ∏è–≠—Ç–æ—Ç –º–æ—Å–∫–∞–ª—å –∏ —Ç–∞–∫ –±–µ–∑ –±–∞–Ω–∞–Ω–∞.\n–î–∞–≤–∞–π –æ—Ç–±–µ—Ä–µ–º –±–∞–Ω–∞–Ω —É –¥—Ä—É–≥–æ–≥–æ –º–æ—Å–∫–∞–ª—è')
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –º—ã –∑–∞–±–µ—Ä–µ–º —É –Ω–µ–≥–æ –≤—Å–µ –µ–≥–æ –≤–µ—â–∏!',reply_markup=klava,parse_mode='Markdown')
                bot.register_next_step_handler(ms,dell_artistr)
            elif str(status)=='1':
                bot.send_message(message.chat.id,f'üî´–º–æ—Å–∫–∞–ª—å *{name}* –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ (–ø–æ—á—Ç–∏) –æ—Ç–¥–∞–ª –±–∞–Ω–∞–Ω –∏ –≤–æ–¥—É. –¢–µ–ø–µ—Ä—å –æ–Ω —Å–≤–æ–±–æ–¥–µ–Ω!',parse_mode='Markdown')
                update_db('status', 'users', 'tg_id', int(message.text), 0)
                artist_menu(message)
                
            else:
                bot.send_message(message.chat.id,'ü§¨–≠—Ç–æ—Ç –º–æ—Å–∫–∞–ª—å –Ω–µ —Å –Ω–∞—à–µ–π –ø–ª–∞–Ω—Ç–∞—Ü–∏–∏!\n–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–π–¥–∏')
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –º—ã –∑–∞–±–µ—Ä–µ–º —É –Ω–µ–≥–æ –≤—Å–µ –µ–≥–æ –≤–µ—â–∏!',reply_markup=klava,parse_mode='Markdown')
                bot.register_next_step_handler(ms,dell_artistr)
        else:
            bot.send_message(message.chat.id,'üôÖ‚Äç‚ôÇÔ∏è–ú–Ω–µ –Ω—É–∂–µ–Ω –∞–π–¥–∏ –º–æ—Å–∫–∞–ª—è. (–ê–π–¥–∏ - —ç—Ç–æ —á–∏—Å–ª–æ, –µ—Å–ª–∏ —á—Ç–æ..)\n–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–π–¥–∏')
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
            ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ ID –º–æ—Å–∫–∞–ª—è, –º—ã –∑–∞–±–µ—Ä–µ–º —É –Ω–µ–≥–æ –≤—Å–µ –µ–≥–æ –≤–µ—â–∏!',reply_markup=klava,parse_mode='Markdown')
            bot.register_next_step_handler(ms,dell_artistr)


#–Ω—É —Ç–µ–ø–µ—Ä—å —Ç–æ—á–Ω–æ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
def create_room_finish(message):
    global room,roominfo,TK
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚úÖ–°–æ–∑–¥–∞–µ–º','‚ùå–û—Ç–º–µ–Ω—è–µ–º')
        ms=bot.send_message(artistr,f'–í–æ—Ç –≤–∞—à–∞ –±—É–¥—É—â–∞—è—è –∫–æ–º–Ω–∞—Ç–∞:\n\n*–ò–º—è:* `{roominfo[0]}`\n*–ö–æ–¥*: `{roominfo[1]}`\n*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å*: `{roominfo[2]}`\n*–¢–ó*: `{TK}`\n\n–°–æ–∑–¥–∞–µ–º?',reply_markup=klava,parse_mode='Markdown',disable_web_page_preview=True)
        bot.register_next_step_handler(ms,create_room_finish)
    elif message.text=='‚úÖ–°–æ–∑–¥–∞–µ–º':
        insert_db('name, code, customer, status, TK','orders',(roominfo[0],roominfo[1],roominfo[2],'open',roominfo[3]), '?,?,?,?,?')
        update_db('deal', 'users', 'tg_id', int(roominfo[2]), roominfo[1])
        #deal
        klava=types.ReplyKeyboardRemove()
        ms=bot.send_message(roominfo[2],f'–í—ã –±—ã–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è –∫–æ–º–Ω–∞—Ç—ã `{roominfo[0]}`. –ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó ( {TK} ). –ï—Å–ª–∏ –∑–∞–∫–∞–∑—á–∏–∫ —Ö–æ—á–µ—Ç –∫–∞–∫-—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –¢–ó, –¥–æ–±–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ - –µ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º (–∫—Ä–æ–º–µ —Å–ª—É—á–∞–µ–≤ —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –≤–ª–∏—è—é—Ç –Ω–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç—å / –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–≤–æ–µ–π —Ä–∞–±–æ—Ç—ã). –ï—â–µ —Ä–∞–∑ –Ω–∞–ø–æ–º–Ω–∏–º –ø—Ä–æ [–ø—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π]({customerRules}), –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –±—É–¥–µ—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω—ã –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞, –±–µ–∑ –≤—ã–ø–ª–∞—Ç—ã –∑–∞ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω—É—é —Ä–∞–±–æ—Ç—É. –° –º–æ–º–µ–Ω—Ç–∞ –∫–æ–≥–¥–∞ –∑–∞–∫–∞–∑—á–∏–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –≤ —á–∞—Ç - –≤—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤ –±–æ—Ç–∞ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –∑–∞–∫–∞–∑—á–∏–∫—É. –¢–∞–∫ –∂–µ –≤—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º –∫–∞–Ω–∞–ª–µ\n–ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ–ø–æ–≤–µ—Å—Ç–∏—Ç–µ –∫—É—Ä–∞—Ç–æ—Ä–∞. –£–¥–∞—á–Ω–æ–π —Ä–∞–±–æ—Ç—ã!',parse_mode='Markdown',disable_web_page_preview=True,reply_markup=klava)
        bot.pin_chat_message(chat_id=roominfo[2], message_id=ms.message_id)
        bot.send_message(message.chat.id,f'–º–æ—Å–∫–∞–ª—å —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ. –ü–µ—Ä–µ–¥–∞–π —ç—Ç–æ—Ç –∫–æ–¥ –∑–∞–∫–∞–∑—á–∏–∫—É: `{roominfo[1]}`',parse_mode='Markdown')
        bot.send_message(logs,f'–ù–æ–≤–∞—è –∫–æ–º–Ω–∞—Ç–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\n*–ò–º—è:* `{roominfo[0]}`\n*–ö–æ–¥*: `{roominfo[1]}`\n*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å*: `{roominfo[2]}`\n*–¢–ó*: `{TK}`',parse_mode='Markdown')
        user_menu(message)

#–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
def create_room(message):
    global artistr, room, roominfo,TK
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥','üé¨—Å–∫–∏–ø')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã:',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, create_room)
    elif message.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ c—Å—ã–ª–∫—É –Ω–∞ –¢–ó:',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, adding_TK)
    else:
        data=(select_db('code', 'orders', 'name', message.text))
        if message.text=='üé¨—Å–∫–∏–ø':
            data=False
        if data==False:
            code=f'{str(random.randint(1,999))}{generate_random_string(3)}{str(random.randint(1,999))}{generate_random_string(3)}{str(random.randint(1,999))}{generate_random_string(3)}{str(random.randint(1,999))}{generate_random_string(3)}{str(random.randint(1,999))}{generate_random_string(3)}'
            if message.text=='üé¨—Å–∫–∏–ø':
                message.text=code
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚úÖ–°–æ–∑–¥–∞–µ–º','‚ùå–û—Ç–º–µ–Ω—è–µ–º')
            ms=bot.send_message(message.chat.id,f'–í–æ—Ç –≤–∞—à–∞ –±—É–¥—É—â–∞—è—è –∫–æ–º–Ω–∞—Ç–∞:\n\n*–ò–º—è:* `{message.text}`\n*–ö–æ–¥*: `{code}`\n*–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å*: `{artistr}`\n*–¢–ó*: `{TK}`\n\n–°–æ–∑–¥–∞–µ–º?',reply_markup=klava,parse_mode='Markdown')
            roominfo=[message.text,code,artistr,TK]
            bot.register_next_step_handler(ms,create_room_finish)
        else:
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥','üé¨—Å–∫–∏–ø')
            ms=bot.send_message(message.chat.id,'–ö–æ–º–Ω–∞—Ç–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –í–≤–µ–¥–∏ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!',reply_markup=klava,parse_mode='Markdown')
            bot.register_next_step_handler(ms, create_room)


#–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¢–ó –∫ –ø—Ä–æ–µ–∫—Ç—É
def adding_TK(message):
    global TK, artistr
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ c—Å—ã–ª–∫—É –Ω–∞ –¢–ó:',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, adding_TK)
    elif message.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ id *–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è*:',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, artistr_id)
    else:
        TK=message.text
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥','üé¨—Å–∫–∏–ø')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã:',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, create_room)


#—Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã 1 —à–∞–≥
def artistr_id(message):
    global artistr
    if message.text is None:
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ id *–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è*:',reply_markup=klava,parse_mode='Markdown')
        bot.register_next_step_handler(ms, artistr_id)
    elif message.text=='‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
        user_menu(message)
    else:
        if message.text.isnumeric():
            status=select_db('status', 'users', 'tg_id', int(message.text))
            if str(status)=='1':
                deal=select_db('deal', 'users', 'tg_id', int(message.text))
                if str(deal)=='0':
                    artistr=message.text 
                    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                    ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ c—Å—ã–ª–∫—É –Ω–∞ –¢–ó:',reply_markup=klava,parse_mode='Markdown')
                    bot.register_next_step_handler(ms, adding_TK)
                else:
                    bot.send_message(message.chat.id,'üí™–≠—Ç–æ—Ç –º–æ—Å–∫–∞–ª—å –∫–æ–Ω–µ—á–Ω–æ –∫—Ä—É—Ç–æ–π, –Ω–æ –Ω–∞ 1 –±–∞–Ω–∞–Ω–µ –æ–Ω –Ω–µ –≤—ã—Ç—è–Ω–µ—Ç 2 –∑–∞–¥–∞–Ω–∏—è. –ü—É—Å—Ç—å –∑–∞–∫–æ–Ω—á–∏—Ç —Ç–æ, —á—Ç–æ —É–∂–µ –¥–µ–ª–∞–µ—Ç')
                    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                    klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                    ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ id *–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è*:',reply_markup=klava,parse_mode='Markdown')
                    bot.register_next_step_handler(ms, artistr_id)

            elif str(status)=='0':
                bot.send_message(message.chat.id,'üòÖ–≠—Ç–æ—Ç –ø–æ—Ä—è–¥–æ—á–Ω—ã–π –∫–ª–∏–µ–Ω—Ç –Ω–µ –º–æ—Å–∫–∞–ª—å, –∑–∞—á–µ–º —Ç—ã —Ç–∞–∫ —Å –Ω–∏–º? –ß—Ç–æ –æ–Ω —Ç–µ–±–µ —Å–¥–µ–ª–∞–ª?')
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ id *–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è*:',reply_markup=klava,parse_mode='Markdown')
                bot.register_next_step_handler(ms, artistr_id)
            else:
                bot.send_message(message.chat.id,'ü¶ç–≠—Ç–æ–≥–æ –º–æ—Å–∫–∞–ª—è –Ω–µ—Ç –≤ –Ω–∞—à–µ–º –≥–∞—Ä–µ–º–µ(')
                klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
                klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
                ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ id *–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è*:',reply_markup=klava,parse_mode='Markdown')
                bot.register_next_step_handler(ms, artistr_id)
        else:
            bot.send_message(message.chat.id,'üôÖ‚Äç‚ôÇÔ∏è–ú–Ω–µ –Ω—É–∂–µ–Ω –∞–π–¥–∏ –º–æ—Å–∫–∞–ª—è. (–ê–π–¥–∏ - —ç—Ç–æ —á–∏—Å–ª–æ, –µ—Å–ª–∏ —á—Ç–æ..)\n–í–≤–µ–¥–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–π–¥–∏')
            klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
            klava.add('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
            ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏ id *–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è*:',reply_markup=klava,parse_mode='Markdown')
            bot.register_next_step_handler(ms, artistr_id)

#–º–µ–Ω—é –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
def artist_menu(message):
    klava=types.ReplyKeyboardMarkup(resize_keyboard=True,row_width=3)
    klava.add('‚ûï–î–æ–±–∞–≤–∏—Ç—å –º–æ—Å–∫–∞–ª—è','üóí–ú–æ–∏ –º–æ—Å–∫–∞–ª–∏','üî™–£–±—Ä–∞—Ç—å –º–æ—Å–∫–∞–ª—è','‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
    ms=bot.send_message(message.chat.id,'–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π:',reply_markup=klava,parse_mode='Markdown')
    bot.register_next_step_handler(ms, artistr_list)

#–í–≤–æ–¥–∏–º –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã
def input_code(message):
    if message.text is None:
        klava=types.ReplyKeyboardRemove()
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –¥–∞–ª –∫—É—Ä–∞—Ç–æ—Ä:',reply_markup=klava)
        bot.register_next_step_handler(ms,input_code)
    else:
        status=(select_db('status', 'orders', 'code', message.text))
        customer=(select_db('customer', 'orders', 'code', message.text))
        atistr=(select_db('atistr', 'orders', 'code', message.text))
        if (customer==False or status=='close') or atistr is not None:
            klava=types.ReplyKeyboardRemove()
            ms=bot.send_message(message.chat.id,'‚ùå–û—à–∏–±–∫–∞, –Ω–µ –≤–µ—Ä–Ω—ã–π –∫–æ–¥!',reply_markup=klava)
            message.text='/start'
            user_menu(message)
        else:
            update_db('atistr', 'orders', 'code', (message.text), message.chat.id)
            update_db('deal', 'users', 'tg_id', (message.chat.id), message.text)
            bot.send_message(customer,'‚ùóÔ∏è–ó–∞–∫–∞–∑—á–∏–∫ –∑–∞—à–µ–ª –≤ –∫–æ–º–Ω–∞—Ç—É!\n–¢–µ–ø–µ—Ä—å –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –≤–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∑–∞–∫–∞–∑—á–∏–∫—É!')
            name=(select_db('name', 'orders', 'code', message.text))
            bot.send_message(message.chat.id,f'–í—ã –∑–∞—à–ª–∏ –≤ –∫–æ–º–Ω–∞—Ç—É "{name}"!\n–í—Å–µ –≤–∞—à–∏ –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é\n–ï—â–µ —Ä–∞–∑ –Ω–∞–ø–æ–º–Ω–∏–º, —á—Ç–æ –ø–æ –ø–æ–≤–æ–¥—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –¢–ó, –æ–±—Å—É–∂–¥–µ–Ω–∏—è —Ü–µ–Ω—ã –º–æ–∂–Ω–æ –æ–±—â–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º\n–ü–æ–ø—ã—Ç–∫–∏ –æ–±–º–µ–Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ —Ç–∞–∫ –∂–µ –∑–∞–ø—Ä–µ—â–µ–Ω—ã\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è')
            

#–º–µ–Ω—é —é–∑–µ—Ä–∞
def user_menu(message):
    klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
    status=(select_db('status', 'users', 'tg_id', message.chat.id))
    deal=(select_db('deal', 'users', 'tg_id', message.chat.id))
    name=(select_db('name', 'orders', 'code', deal))
    if status==0 and deal=='0' and message.text=='üö™–í–æ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É' and not admin_check(message):
        klava=types.ReplyKeyboardRemove()
        ms=bot.send_message(message.chat.id,'–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∫–æ–º–Ω–∞—Ç—ã, –∫–æ—Ç–æ—Ä—ã–π –≤–∞–º –¥–∞–ª –∫—É—Ä–∞—Ç–æ—Ä:',reply_markup=klava)
        bot.register_next_step_handler(ms,input_code)
    else:
        if status==0 and deal=='0':
            klava.add('üö™–í–æ–π—Ç–∏ –≤ –∫–æ–º–Ω–∞—Ç—É')    
            if admin_check(message):
                klava.add('‚ûï–°–æ–∑–¥–∞—Ç—å –∫–æ–º–Ω–∞—Ç—É','üìö–ö–æ–º–Ω–∞—Ç—ã','üßîüèø‚Äç‚ôÇÔ∏è–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏')
            bot.send_message(message.chat.id, '–ú–µ–Ω—é:',reply_markup=klava)
        elif status==0 and deal!='0':
            customer=(select_db('customer', 'orders', 'code', deal))
            big_ms(customer,f'–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∑–∞–∫–∞–∑—á–∏–∫–∞:\n{message.text}')
            klava=types.InlineKeyboardMarkup()
            klava.add(types.InlineKeyboardButton(text='‚úâÔ∏è–ù–∞–ø–∏—Å–∞—Ç—å', url=f't.me/{message.from_user.username}'))
            bot.send_message(logs, f'*–ö–æ–º–Ω–∞—Ç–∞*: `{name}`\n*–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å*: `–ó–∞–∫–∞–∑—á–∏–∫`',parse_mode='Markdown',reply_markup=klava)
            bot.forward_message(logs, message.chat.id, message.message_id)
        elif status==1 and deal=='0':
            klava=types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id,'‚õîÔ∏è–ö–æ–≥–¥–∞ —Ç—ã –≤–æ–∑—å–º–µ—à—å –∑–∞–∫–∞–∑ - —Ç–µ–±–µ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É',reply_markup=klava)
        

        
#–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
def big_ms(to,ms):
    if len(ms) > 4096:
        for x in range(0, len(ms), 4096):
            bot.send_message(to, ms[x:x+4096])
    else:
        bot.send_message(to, ms)

#–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω-—Å—Ç–∞—Ç—É—Å
def admin_check(message):
    for i in admin:
        if i==message.chat.id:
            return True

#–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–Ω–¥–æ–º–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
def generate_random_string(length):
    letters = string.ascii_uppercase
    rand_string = ''.join(random.choice(letters) for i in range(length))
    return(rand_string)

if __name__== "__main__":
   bot.polling(bot)
